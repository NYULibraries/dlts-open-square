

{{/* Get remote data: first call is for a list of all the books */}}
{{ $data := dict }}
{{ $docs := dict }}
{{ $url := "https://sites.dlib.nyu.edu/viewer/api/v1/epubs/nyu-press" }}

{{ $opts := dict
  "method" "get"
  "headers" (dict
    "Content-Type" "application/x-www-form-urlencoded"
  )
  "body" `{"complete": true}`
}}

{{ with resources.GetRemote $url $opts }}
  {{ with .Err }}
    {{ errorf "Case 1: Unable to get remote resource %s: %s" $url . }}
  {{ else }}
    {{ $data = .Content | transform.Unmarshal }}
    {{ $docs = index $data "response" "docs"  }}
  {{ end }}
{{ else }}
  {{ errorf "Case 2: Unable to get remote resource %s" $url }}
{{ end }}

{{/* Add pages */}}
{{ range $docs }}
  {{ $uri := .uri  }}
  {{ warnf "URI is :  %s" .uri }}
  {{/* Get remote data: a call for each book */}}
  {{ $opts := dict
    "method" "get"
    "headers" (dict
      "Content-Type" "application/x-www-form-urlencoded"
    )
    "body" `{"complete": true}`
  }}

  {{ with resources.GetRemote $uri $opts }}
    {{ with .Err }}
      {{ errorf "Case 1: Unable to get remote resource %s: %s" $uri . }}
    {{ else }}
      {{ $data := .Content | transform.Unmarshal }}
      {{ $title := index $data "title"   }}
      {{ $date := index $data "dateBook"   }}
      {{ warnf "Good! :  %s %s " $title $date  }}
      {{ $subjects := index $data "subjects"  }}
      {{/* Loop through the slice of subjects. If any have a trailing space, remove it.  */}}
      {{ $subjects = collections.Apply $subjects "strings.Trim" "." " " }}
      {{/* Here, there is a subject with a forward slash in its name, which is not allowed. To display as intended, we change its name to its desired slug, and also create a custom file in content/subjects to create the mapping between desired slug and desired title.  */}}
      {{ $subjects = collections.Apply $subjects "strings.Replace" "." "Latino\\a Studies" "latino-a-studies" }}
      {{ $contributors := (index $data "contributors" ) }}
      {{ $paramsAll :=  $data }}
      {{ $paramsUpdate :=  dict
        "date" $date
        "citation_link" (index $data "handle")
        "subjects" $subjects
        "series" (index $data "series")
      }}
      {{ $params :=  merge $paramsAll $paramsUpdate }}
      {{ $page := dict
        "title" $title
        "date" $date
        "kind" "page"
        "params" $params
        "path" (index $data "openSquareId")
      }}
      {{ $.AddPage $page }}
    {{ end }}
  {{ else }}
    {{ errorf "Case 2: Unable to get remote resource %s" $uri }}
  {{ end }}
{{ end }}
